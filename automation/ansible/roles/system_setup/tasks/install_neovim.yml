---
- name: Include EPEL if needed
  ansible.builtin.import_tasks: install_epel.yml
  when: ansible_os_family == "RedHat"
  tags:
    - neovim
    - setup
    - epel

- name: Install Neovim build prerequisites (Debian)
  become: true
  ansible.builtin.apt:
    name:
      - ninja-build
      - libtool
      - libtool-bin
      - autoconf
      - automake
      - cmake
      - g++
      - pkg-config
      - unzip
      - curl
      - gettext
      - git
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  tags:
    - neovim
    - packages

- name: Install Neovim build prerequisites (RedHat)
  become: true
  ansible.builtin.dnf:
    name:
      # - ninja-build # TODO: Update this when RHEL 10 is more mature
      - libtool
      - autoconf
      - automake
      - cmake
      - gcc-c++
      - pkgconfig
      - unzip
      - gettext
      - curl
      - git
    state: present
  when: ansible_os_family == "RedHat"
  tags:
    - neovim
    - packages

- name: Clone Neovim repository
  # noqa latest[git]
  become: true
  ansible.builtin.git:
    repo: "{{ nvim_repo_url }}"
    dest: "/usr/local/src/neovim"
    # version: stable # <omitted> == nightly
    update: true
  tags:
    - neovim
    - source
    - git

- name: Build Neovim and handle build failures
  block:
    - name: Build Neovim from source
      become: true
      ansible.builtin.command:
        cmd: "make CMAKE_BUILD_TYPE={{ nvim_build_type }}"
        chdir: "/usr/local/src/neovim"
      register: build_result
      changed_when: "'Built target' in build_result.stdout"
      failed_when: build_result.rc != 0
  rescue:
    - name: Fail gracefully if Neovim build fails
      ansible.builtin.fail:
        msg: "Neovim failed to build. Please check the build logs and prerequisites."

- name: Install Neovim
  become: true
  ansible.builtin.command:
    cmd: "make install"
    chdir: "/usr/local/src/neovim"
  changed_when: true
  tags:
    - neovim
    - install

- name: Fix runtime dir permissions for Neovim
  become: true
  ansible.builtin.file:
    path: "/usr/local/share/nvim/runtime"
    owner: root
    group: root
    mode: "0755"
    recurse: true
  tags:
    - neovim
    - permissions

- name: Ensure /usr/local/share/nvim is world-readable
  become: true
  ansible.builtin.file:
    path: "/usr/local/share/nvim"
    mode: "0755"
  tags:
    - neovim
    - permissions

- name: Verify Neovim installation
  ansible.builtin.command: "nvim --version"
  register: nvim_version
  changed_when: false
  failed_when: nvim_version.rc != 0
  tags:
    - neovim
    - verify

- name: Display Neovim version
  ansible.builtin.debug:
    msg: "{{ nvim_version.stdout }}"
  tags:
    - neovim
    - verify
